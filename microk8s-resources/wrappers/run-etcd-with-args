#!/bin/bash
set -e
export PATH="$SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH"
ARCH="$($SNAP/bin/uname -m)"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib:$SNAP/lib/$ARCH-linux-gnu:$SNAP/usr/lib/$ARCH-linux-gnu"
export LD_LIBRARY_PATH=$SNAP_LIBRARY_PATH:$LD_LIBRARY_PATH

source $SNAP/actions/common/utils.sh

exit_if_service_not_expected_to_start etcd

if [ -e ${SNAP_DATA}/var/lock/clustered.lock ]
then
  echo "etcd will not run on a cluster node"
  exit 0
fi

# etcd will not start if the socket already exists.
if [ -S "${SNAP_DATA}/etcd.socket:2379" ]; then
  rm "${SNAP_DATA}/etcd.socket:2379"
fi

ARCH=$(arch)

if ! [ "$ARCH" = "amd64" ]; then
  export ETCD_UNSUPPORTED_ARCH="$ARCH"
fi

export DEFAULT_INTERFACE_IP_ADDR="$(get_default_ip)"

if [ -e ${SNAP_DATA}/var/lock/migrate-etcdv2.lock ]
then
  data_dir="$(cat $SNAP_DATA/args/etcd | grep "data-dir" | tr "=" " "| awk '{print $2}')"
  data_dir="$(eval echo $data_dir)"
  wal_dir="$(cat $SNAP_DATA/args/etcd | grep "wal-dir" | tr "=" " "| awk '{print $2}')"
  wal_dir="$(eval echo $wal_dir)"
  ETCDCTL_API=3 "${SNAP}/etcdutl" migrate --data-dir "${data_dir}" --wal-dir "${wal_dir}"
  rm "${SNAP_DATA}/var/lock/migrate-etcdv2.lock"
  echo "Migrated from etcdv2 to etcdv3"
fi

# This is really the only way I could find to get the args passed in correctly.
declare -a args="($(cat $SNAP_DATA/args/etcd))"
exec "$SNAP/etcd" "${args[@]}"
